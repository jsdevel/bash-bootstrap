#!/bin/bash
BIN_DIR=$(dirname $(readlink -f ${BASH_SOURCE[0]}))
nodeScaffold=$(dirname $BIN_DIR)/resources/node-scaffold
ORIG_DIR=$PWD

if [ -z "$1" ];then
  echo "You haven't provided a name for your node project!"
  exit 1;
fi

projectName=$1
proposedProjectDir=$PWD/node-$1

if [ -d $proposedProjectDir ];then
  echo "$proposedProjectDir already exists!  Aborting..."
  exit 1;
fi

read -p 'Enter the description of the project: ' PROJECT_DESCRIPTION
if [ -z "$PROJECT_DESCRIPTION" ];then
  echo "Project description is required!";
fi
read -p 'Enter the github url for the project: ' GITHUB_URL
if [ -z "$GITHUB_URL" ];then
  echo "A github url is required!";
fi
read -p 'Enter the github username: ' GITHUB_USERNAME
if [ -z "$GITHUB_USERNAME" ];then
  echo "A github username is required!";
fi
read -p 'Enter the year: ' YEAR
if [ -z "$YEAR" ];then
  echo "A year is required!";
fi
read -p "Enter the project author's name: " PROJECT_AUTHOR
if [ -z "$PROJECT_AUTHOR" ];then
  echo "The project author's name is required!";
fi

read -p "Would you like to publish the initial version? [y/n]: " PUBLISH_INITIAL

case "$PUBLISH_INITIAL" in
  y|n);;
  *)echo "Invalid option!  Exiting...";exit 1;;
esac

GITHUB_URL=${GITHUB_URL/%.git/}

git init $proposedProjectDir
cd $proposedProjectDir

cp -r $nodeScaffold/* $proposedProjectDir
cp $nodeScaffold/.* $proposedProjectDir 2> /dev/null

#package.json
sed -i'' "s|__NAME__|$projectName|g" $proposedProjectDir/package.json
sed -i'' "s|__PROJECT_AUTHOR__|$PROJECT_AUTHOR|g" $proposedProjectDir/package.json
sed -i'' "s|__DESCRIPTION__|$PROJECT_DESCRIPTION|g" $proposedProjectDir/package.json
sed -i'' "s|__GITHUB_URL__|$GITHUB_URL|g" $proposedProjectDir/package.json

#README
sed -i'' "s|__NAME__|$projectName|g" $proposedProjectDir/README.md
sed -i'' "s|__PROJECT_AUTHOR__|$PROJECT_AUTHOR|g" $proposedProjectDir/README.md
sed -i'' "s|__DESCRIPTION__|$PROJECT_DESCRIPTION|g" $proposedProjectDir/README.md
sed -i'' "s|__GITHUB_URL__|$GITHUB_URL|g" $proposedProjectDir/README.md
sed -i'' "s|__GITHUB_USERNAME__|$GITHUB_USERNAME|g" $proposedProjectDir/README.md
sed -i'' "s|__YEAR__|$YEAR|g" $proposedProjectDir/README.md

#LICENSE
sed -i'' "s|__PROJECT_AUTHOR__|$PROJECT_AUTHOR|g" $proposedProjectDir/LICENSE
sed -i'' "s|__YEAR__|$YEAR|g" $proposedProjectDir/LICENSE

#misc
sed -i'' "s|__NAME__|$projectName|g" $proposedProjectDir/lib/index.js
sed -i'' "s|__NAME__|$projectName|g" $proposedProjectDir/test/index.js
sed -i'' "s|__NAME__|$projectName|g" $proposedProjectDir/integration/index.js

git remote add origin ${GITHUB_URL}.git

mv $proposedProjectDir/lib/index.js $proposedProjectDir/lib/$projectName.js
mv $proposedProjectDir/test/index.js $proposedProjectDir/test/$projectName.js
mv $proposedProjectDir/integration/index.js $proposedProjectDir/integration/$projectName.js


npm install istanbul mocha should jshint --save-dev
npm test

if [ "$PUBLISH_INITIAL" == "y" ];then
  npm publish
fi
